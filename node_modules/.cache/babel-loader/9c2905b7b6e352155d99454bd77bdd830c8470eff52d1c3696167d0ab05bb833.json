{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayah\\\\OneDrive\\\\Desktop\\\\Folders\\\\MERN Stack\\\\aithinkr\\\\src\\\\components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { GoogleGenAI } from '@google/genai';\n\n// Initialize the Gemini AI client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ai = new GoogleGenAI({\n  apiKey: 'AIzaSyAiV_SF4k-qRDPTDPBVEFMQ9d8eM1KLjoU' // ⚠️ Keep your API key secure\n});\nconst Chatbox = () => {\n  _s();\n  const inputRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: 'Hi there! How can I help?'\n  }]);\n  const handleSend = async () => {\n    const userMsg = inputRef.current.value.trim();\n    if (!userMsg) return;\n\n    // Add user message to chat\n    setMessages(prev => [...prev, {\n      type: 'user',\n      text: userMsg\n    }]);\n    inputRef.current.value = '';\n    try {\n      // Get the generative model\n      const model = ai.getGenerativeModel({\n        model: 'gemini-2.0-flash'\n      });\n\n      // Generate response\n      const result = await model.generateContent([{\n        role: 'user',\n        parts: [userMsg]\n      }]);\n      const response = await result.response;\n      const botReply = await response.text(); // ✅ Correctly extract text\n\n      // Add bot response to chat\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: botReply\n      }]);\n    } catch (error) {\n      console.error('Error generating content:', error);\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: 'Sorry, something went wrong.'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box border p-3 rounded shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body mb-3\",\n        style: {\n          maxHeight: '300px',\n          overflowY: 'auto'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.type === 'user' ? 'text-end' : 'text-start'} mb-2`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${msg.type === 'user' ? 'bg-primary' : 'bg-secondary'}`,\n            children: [msg.type === 'user' ? 'You' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), ' ', msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: \"Type your message...\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"IrByxa0fzAUC3TUqGg9eRlQQ3BI=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useRef","useState","GoogleGenAI","jsxDEV","_jsxDEV","ai","apiKey","Chatbox","_s","inputRef","messages","setMessages","type","text","handleSend","userMsg","current","value","trim","prev","model","getGenerativeModel","result","generateContent","role","parts","response","botReply","error","console","className","children","style","maxHeight","overflowY","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jayah/OneDrive/Desktop/Folders/MERN Stack/aithinkr/src/components/Chatbox.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { GoogleGenAI } from '@google/genai';\r\n\r\n// Initialize the Gemini AI client\r\nconst ai = new GoogleGenAI({\r\n  apiKey: 'AIzaSyAiV_SF4k-qRDPTDPBVEFMQ9d8eM1KLjoU', // ⚠️ Keep your API key secure\r\n});\r\n\r\nconst Chatbox = () => {\r\n  const inputRef = useRef(null);\r\n  const [messages, setMessages] = useState([\r\n    { type: 'bot', text: 'Hi there! How can I help?' },\r\n  ]);\r\n\r\n  const handleSend = async () => {\r\n    const userMsg = inputRef.current.value.trim();\r\n    if (!userMsg) return;\r\n\r\n    // Add user message to chat\r\n    setMessages((prev) => [...prev, { type: 'user', text: userMsg }]);\r\n    inputRef.current.value = '';\r\n\r\n    try {\r\n      // Get the generative model\r\n      const model = ai.getGenerativeModel({ model: 'gemini-2.0-flash' });\r\n\r\n      // Generate response\r\n      const result = await model.generateContent([\r\n        { role: 'user', parts: [userMsg] },\r\n      ]);\r\n\r\n      const response = await result.response;\r\n      const botReply = await response.text(); // ✅ Correctly extract text\r\n\r\n      // Add bot response to chat\r\n      setMessages((prev) => [...prev, { type: 'bot', text: botReply }]);\r\n    } catch (error) {\r\n      console.error('Error generating content:', error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { type: 'bot', text: 'Sorry, something went wrong.' },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"box border p-3 rounded shadow-sm\">\r\n        <div\r\n          className=\"chat-body mb-3\"\r\n          style={{ maxHeight: '300px', overflowY: 'auto' }}\r\n        >\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`chat-message ${\r\n                msg.type === 'user' ? 'text-end' : 'text-start'\r\n              } mb-2`}\r\n            >\r\n              <span\r\n                className={`badge ${\r\n                  msg.type === 'user' ? 'bg-primary' : 'bg-secondary'\r\n                }`}\r\n              >\r\n                {msg.type === 'user' ? 'You' : 'Bot'}:\r\n              </span>{' '}\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control me-2\"\r\n            placeholder=\"Type your message...\"\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"btn btn-primary\" onClick={handleSend}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAG,IAAIH,WAAW,CAAC;EACzBI,MAAM,EAAE,yCAAyC,CAAE;AACrD,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CACvC;IAAEW,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAA4B,CAAC,CACnD,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,OAAO,GAAGN,QAAQ,CAACO,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IAC7C,IAAI,CAACH,OAAO,EAAE;;IAEd;IACAJ,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEP,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEE;IAAQ,CAAC,CAAC,CAAC;IACjEN,QAAQ,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;IAE3B,IAAI;MACF;MACA,MAAMG,KAAK,GAAGf,EAAE,CAACgB,kBAAkB,CAAC;QAAED,KAAK,EAAE;MAAmB,CAAC,CAAC;;MAElE;MACA,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAAC,CACzC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,CAACV,OAAO;MAAE,CAAC,CACnC,CAAC;MAEF,MAAMW,QAAQ,GAAG,MAAMJ,MAAM,CAACI,QAAQ;MACtC,MAAMC,QAAQ,GAAG,MAAMD,QAAQ,CAACb,IAAI,CAAC,CAAC,CAAC,CAAC;;MAExC;MACAF,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEP,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEc;MAAS,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDjB,WAAW,CAAEQ,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAEP,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAA+B,CAAC,CACtD,CAAC;IACJ;EACF,CAAC;EAED,oBACET,OAAA;IAAK0B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B3B,OAAA;MAAK0B,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/C3B,OAAA;QACE0B,SAAS,EAAC,gBAAgB;QAC1BE,KAAK,EAAE;UAAEC,SAAS,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAH,QAAA,EAEhDrB,QAAQ,CAACyB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBjC,OAAA;UAEE0B,SAAS,EAAE,gBACTM,GAAG,CAACxB,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY,OACzC;UAAAmB,QAAA,gBAER3B,OAAA;YACE0B,SAAS,EAAE,SACTM,GAAG,CAACxB,IAAI,KAAK,MAAM,GAAG,YAAY,GAAG,cAAc,EAClD;YAAAmB,QAAA,GAEFK,GAAG,CAACxB,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG,KAAK,EAAC,GACvC;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAAC,GAAG,EACVL,GAAG,CAACvB,IAAI;QAAA,GAZJwB,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAK0B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjC3B,OAAA;UACEQ,IAAI,EAAC,MAAM;UACXkB,SAAS,EAAC,mBAAmB;UAC7BY,WAAW,EAAC,sBAAsB;UAClCC,GAAG,EAAElC;QAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACFrC,OAAA;UAAQ0B,SAAS,EAAC,iBAAiB;UAACc,OAAO,EAAE9B,UAAW;UAAAiB,QAAA,EAAC;QAEzD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CA5EID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA8Eb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}